akumea_dungeon_lv100_ne={["start"]=0,settings= function ()return { 
[ "requirements" ] = { 
[ "min_level" ] = 100 , 
[ "max_level" ] = 150 , 
[ "ticket" ] = 71095 , 
[ "party" ] = false , 
[ "min_party_members" ] = 1 , 
} , 
[ "pos" ] = { 
[ "map_index" ] = 352 , 
[ "x" ] = 5291 , 
[ "y" ] = 1814 , 
} , 
[ "out_pos" ] = { 
[ "map_index" ] = 352 , 
[ "x" ] = 5291 , 
[ "y" ] = 1814 , 
} , 
[ "cooldown" ] = 7200 , 
[ "data" ] = { 
[ "warp" ] = { 
[ 2 ] = { 5540 , 1797 } , 
[ 3 ] = { 5882 , 1800 } , 
[ 4 ] = { 5293 , 2071 } , 
[ 5 ] = { 5540 , 2074 } , 
[ 6 ] = { 5866 , 2076 } , 
[ 7 ] = { 5969 , 2229 } , 
[ 8 ] = { 6047 , 1924 } 
} , 
[ "level" ] = { 
[ 2 ] = { 
[ "drop" ] = 30331 , 
} , 
[ 4 ] = { 
[ "szel" ] = { 
[ "vnum" ] = 6151 , 
[ "pos" ] = { 
[ "x" ] = 160 , 
[ "y" ] = 490 , 
} , 
} , 
} , 
[ 5 ] = { 
[ "cube" ] = { 
[ "vnum" ] = 20398 , 
[ "pos" ] = { 
{ 449 , 488 } , 
{ 455 , 445 } , 
{ 419 , 422 } , 
{ 382 , 444 } , 
{ 389 , 488 } 
} , 
} , 
[ "drop" ] = 30332 , 
} , 
[ 6 ] = { 
[ "stone" ] = { 
[ "vnum" ] = 8058 , 
[ "pos" ] = { 
{ 744 , 497 } , 
{ 721 , 461 } , 
{ 767 , 449 } 
} , 
} , 
} , 
[ 7 ] = { 
[ "stone" ] = { 
[ "vnum" ] = 20399 , 
[ "pos" ] = { 
[ "x" ] = 849 , 
[ "y" ] = 660 , 
} , 
} , 
} , 
[ 8 ] = { 
[ "nemere" ] = { 
[ "vnum" ] = 6191 , 
[ "pos" ] = { 
[ "x" ] = 927 , 
[ "y" ] = 333 , 
} , 
} 
} , 
} , 
} , 
} 
end ,is_dungeon= function ()local index = pc . get_map_index ( ) ; 
return pc . in_dungeon ( ) and index >= 352 * 10000 and index < ( 352 + 1 ) * 10000 ; 
end ,clear_timers= function ()clear_server_timer ( "akumea_dungeon_lv100_ne_monster_wave" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_warp" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_60min_left" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_45min_left" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_30min_left" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_15min_left" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_10min_left" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_5min_left" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_1min_left" , get_server_timer_arg ( ) ) 
clear_server_timer ( "akumea_dungeon_lv100_ne_final_exit" , get_server_timer_arg ( ) ) 
end ,create_dungeon= function ()local settings = akumea_dungeon_lv100_ne . settings ( ) 
local requirements = settings [ "requirements" ] 
local pos = settings [ "pos" ] 
if party . is_party ( ) then 
local near_count = party . get_near_count ( ) 
local pids = { party . get_member_pids ( ) } ; 
for i , pid in next , pids , nil begin 
q . begin_other_pc_block ( pid ) 
pc . remove_item ( requirements [ "ticket" ] , 1 ) 
pc . setf ( "akumea_dungeon_lv100_ne" , "enter_time" , get_global_time ( ) ) 
q . end_other_pc_block ( ) 
end 
d . new_jump_party ( pos [ "map_index" ] , pos [ "x" ] , pos [ "y" ] ) 
d . setf ( "dungeon_member_count" , near_count ) 
else 
pc . remove_item ( requirements [ "ticket" ] , 1 ) 
pc . setf ( "akumea_dungeon_lv100_ne" , "enter_time" , get_global_time ( ) ) 
d . new_jump ( pos [ "map_index" ] , pos [ "x" ] * 100 , pos [ "y" ] * 100 ) 
end 
server_timer ( "akumea_dungeon_lv100_ne_60min_left" , 15 * 60 , d . get_map_index ( ) ) 
end ,set_warp_timer= function ()local settings = akumea_dungeon_lv100_ne . settings ( ) 
local data = settings [ "data" ] 
local level = d . getf ( "dungeon_level" ) 
if data [ "warp" ] [ level ] ~= nil then 
d . notice_mission ( 824 ) 
server_timer ( "akumea_dungeon_lv100_ne_warp" , 5 , d . get_map_index ( ) ) 
else 
server_timer ( "akumea_dungeon_lv100_ne_warp" , 1 , d . get_map_index ( ) ) 
end 
end ,set_level= function (level)d . setf ( "dungeon_level" , level ) 
akumea_dungeon_lv100_ne . set_warp_timer ( ) 
end ,create_level= function ()local settings = akumea_dungeon_lv100_ne . settings ( ) 
local data = settings [ "data" ] 
local level = d . getf ( "dungeon_level" ) 
if level == 1 then 
d . notice_mission ( 91754 ) 
d . notice_sub_mission ( "(%d / %d)" , 0 , 100 ) 
d . regen_file ( string . format ( "data/dungeon/snow_dungeon/%s.txt" , "sd_1" ) ) 
d . setf ( "monster_count" , d . new_count_monster ( ) ) 
elseif level == 2 then 
d . notice_mission ( 91778 , item_name ( data [ "level" ] [ 2 ] [ "drop" ] ) ) 
d . set_regen_file ( string . format ( "data/dungeon/snow_dungeon/%s.txt" , "sd_2" ) ) 
elseif level == 3 then 
d . notice_mission ( 91754 ) 
d . notice_sub_mission ( "(%d / %d)" , 0 , 100 ) 
d . regen_file ( string . format ( "data/dungeon/snow_dungeon/%s.txt" , "sd_3" ) ) 
d . setf ( "monster_count" , d . new_count_monster ( ) ) 
elseif level == 4 then 
d . notice_mission ( 91717 , mob_link ( data [ "level" ] [ 4 ] [ "szel" ] [ "vnum" ] ) ) 
d . spawn_mob ( data [ "level" ] [ 4 ] [ "szel" ] [ "vnum" ] , data [ "level" ] [ 4 ] [ "szel" ] [ "pos" ] [ "x" ] , data [ "level" ] [ 4 ] [ "szel" ] [ "pos" ] [ "y" ] ) 
elseif level == 5 then 
d . notice_mission ( 91779 , item_name ( data [ "level" ] [ 5 ] [ "drop" ] ) ) 
local pos_arr = data [ "level" ] [ 5 ] [ "cube" ] [ "pos" ] 
d . notice_sub_mission ( "(%d / %d)" , 0 , table . getn ( pos_arr ) ) 
d . set_regen_file ( string . format ( "data/dungeon/snow_dungeon/%s.txt" , "sd_5" ) ) 
for index , pos in ipairs ( pos_arr ) begin 
d . set_unique ( string . format ( "cube_%d" , index ) , d . spawn_mob ( data [ "level" ] [ 5 ] [ "cube" ] [ "vnum" ] , pos [ 1 ] , pos [ 2 ] ) ) 
end 
elseif level == 6 then 
d . notice_mission ( 91725 ) 
local pos_arr = data [ "level" ] [ 6 ] [ "stone" ] [ "pos" ] 
d . notice_sub_mission ( "(%d / %d)" , 0 , table . getn ( pos_arr ) ) 
for _ , pos in ipairs ( pos_arr ) begin 
d . spawn_mob ( data [ "level" ] [ 6 ] [ "stone" ] [ "vnum" ] , pos [ 1 ] , pos [ 2 ] ) 
end 
elseif level == 7 then 
d . notice_mission ( 91717 , mob_link ( data [ "level" ] [ 7 ] [ "stone" ] [ "vnum" ] ) ) 
d . spawn_mob ( data [ "level" ] [ 7 ] [ "stone" ] [ "vnum" ] , data [ "level" ] [ 7 ] [ "stone" ] [ "pos" ] [ "x" ] , data [ "level" ] [ 7 ] [ "stone" ] [ "pos" ] [ "y" ] ) 
elseif level == 8 then 
if not d . is_unique_dead ( "level8_boss" ) then 
return 
end 
d . notice_mission ( 91717 , mob_link ( data [ "level" ] [ 8 ] [ "nemere" ] [ "vnum" ] ) ) 
d . set_unique ( "level8_boss" , d . spawn_mob ( data [ "level" ] [ 8 ] [ "nemere" ] [ "vnum" ] , data [ "level" ] [ 8 ] [ "nemere" ] [ "pos" ] [ "x" ] , data [ "level" ] [ 8 ] [ "nemere" ] [ "pos" ] [ "y" ] ) ) 
end 
if data [ "warp" ] [ level ] ~= nil then 
d . jump_all ( data [ "warp" ] [ level ] [ 1 ] , data [ "warp" ] [ level ] [ 2 ] ) 
end 
end }